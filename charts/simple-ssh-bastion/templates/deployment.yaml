apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "simple-ssh-bastion.fullname" . }}
  labels:
    {{- include "simple-ssh-bastion.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
    {{- with .Values.strategy }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "simple-ssh-bastion.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "simple-ssh-bastion.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "simple-ssh-bastion.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk update;
              apk add openssh;
              {{- range .Values.bastion.packages }}
              apk add "{{ . }}";
              {{- end }}
              echo 'export PS1="\\[\\033[01;32m\\]\\u\\[\\033[00m\\]@\\[\\033[01;33m\\]{{ .Values.bastion.hostname }}\\[\\033[00m\\]:\\w\\$ "' >> /etc/profile
              if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then
                # Generate SSH keys
                ssh-keygen -A
              fi
              rm /etc/motd
              adduser -D {{ .Values.bastion.sshUser }};
              passwd -u {{ .Values.bastion.sshUser }};
              mkdir /home/{{ .Values.bastion.sshUser }}/.ssh;
              chmod 744 /home/{{ .Values.bastion.sshUser }}/.ssh;
              chown -R 1000:1000 /home/{{ .Values.bastion.sshUser }};
              rm /home/{{ $.Values.bastion.sshUser }}/.ssh/authorized_keys;
              {{- range .Values.bastion.sshKeys }}
              echo "{{ . }}" >> /home/{{ $.Values.bastion.sshUser }}/.ssh/authorized_keys;
              {{- end }}
              /usr/sbin/sshd -D -e
          ports:
            - name: ssh
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: ssh
          readinessProbe:
            tcpSocket:
              port: ssh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: ssh-config
            mountPath: /etc/ssh/sshd_config
            subPath: sshd_config
          {{- if .Values.persistence.enabled }}
          - name: {{ include "simple-ssh-bastion.fullname" . }}
            mountPath: /etc/ssh
            subPath: ssh
          - name: {{ include "simple-ssh-bastion.fullname" . }}
            mountPath: /home/{{ .Values.bastion.sshUser }}
            subPath: home
          {{- end }}
      volumes:   
      - name: ssh-config
        configMap:
          name: {{ include "simple-ssh-bastion.fullname" . }}-ssh-config
      {{- if .Values.persistence.enabled }}
      - name: {{ include "simple-ssh-bastion.fullname" . }}
        persistentVolumeClaim:
          claimName: {{ include "simple-ssh-bastion.fullname" . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
